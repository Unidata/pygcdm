// Copyright (c) 2020-2021 John Caron and University Corporation for Atmospheric Research/Unidata
// See LICENSE for license information.

syntax = "proto3";

package ucar.gcdm;

import "ucar/gcdm/gcdm_netcdf.proto";

option java_package = "ucar.gcdm";
option java_outer_classname = "GcdmGridProto";

message GridDatasetRequest {
  string location = 1;
}

message GridDatasetResponse {
  Error error = 1;  // non-empty on error
  uint32 version = 2; // response version
  GridDataset dataset = 3;
}

////////////////////////////////////////////////
// Gcdm General (could be in more generic proto)

enum CdmAxisType {  // related to ucar.nc2.constants.AxisType
  CDM_AXIS_TYPE_UNSPECIFIED = 0;
  CDM_AXIS_TYPE_RUN_TIME = 1;
  CDM_AXIS_TYPE_ENSEMBLE = 2;
  CDM_AXIS_TYPE_TIME = 3;
  CDM_AXIS_TYPE_GEO_X = 4;
  CDM_AXIS_TYPE_GEO_Y = 5;
  CDM_AXIS_TYPE_GEO_Z = 6;
  CDM_AXIS_TYPE_LAT = 7;
  CDM_AXIS_TYPE_LON = 8;
  CDM_AXIS_TYPE_HEIGHT = 9;
  CDM_AXIS_TYPE_PRESSURE = 10;
  CDM_AXIS_TYPE_TIME_OFFSET = 11;
  CDM_AXIS_TYPE_DIMENSION = 12;
}

// could be related to java.ucar.nc2.constants.FeatureType
enum CdmFeatureType {
  CDM_FEATURE_TYPE_UNSPECIFIED = 0;
  CDM_FEATURE_TYPE_GENERAL = 1;
  CDM_FEATURE_TYPE_CURVILINEAR = 2;
  CDM_FEATURE_TYPE_GRIDDED = 3;
  CDM_FEATURE_TYPE_SWATH = 4;
  CDM_FEATURE_TYPE_FMRC = 5;
}

////////////////////////////////////////////////////////////////////
// GridDataset

// currently related to GridAxisSpacing
enum GridAxisSpacing {
  GRID_AXIS_SPACING_UNSPECIFIED = 0;
  GRID_AXIS_SPACING_REGULAR_POINT = 1;
  GRID_AXIS_SPACING_IRREGULAR_POINT = 2;
  GRID_AXIS_SPACING_NOMINAL_POINT = 6;
  GRID_AXIS_SPACING_REGULAR_INTERVAL = 3;
  GRID_AXIS_SPACING_CONTIGUOUS_INTERVAL = 4;
  GRID_AXIS_SPACING_DISCONTIGUOUS_INTERVAL = 5;
}

// currently related to GridAxisDependenceType
enum GridAxisDependenceType {
  GRID_AXIS_DEPENDENCE_TYPE_UNSPECIFIED = 0;
  GRID_AXIS_DEPENDENCE_TYPE_INDEPENDENT = 1; // has its own dimension, is a coordinate variable, eg x(x)
  GRID_AXIS_DEPENDENCE_TYPE_DEPENDENT = 2;   // aux coordinate, reftime(time) or time_bounds(time);
  GRID_AXIS_DEPENDENCE_TYPE_SCALAR = 3;      // reftime
  GRID_AXIS_DEPENDENCE_TYPE_TWO_D = 4;       // lat(x,y)
  GRID_AXIS_DEPENDENCE_TYPE_FMRC_REG = 5;    // time(reftime, hourOfDay)
  GRID_AXIS_DEPENDENCE_TYPE_DIMENSION = 6;   // swath(scan, scanAcross)
}

// currently related to GridTimeCoordinateSystem.Type
enum GridTimeType {
  GRID_TIME_TYPE_UNSPECIFIED = 0;
  GRID_TIME_TYPE_OBSERVATION = 1;
  GRID_TIME_TYPE_SINGLE_RUNTIME = 2;
  GRID_TIME_TYPE_OFFSET = 3;
  GRID_TIME_TYPE_OFFSET_REGULAR = 4;
  GRID_TIME_TYPE_OFFSET_IRREGULAR= 5;
}

message GridAxis {
  bool is_interval = 1;

  string name = 2;
  string description = 3;
  string units = 4;
  CdmAxisType cdm_axis_type = 5;
  repeated Attribute attributes = 6; // find calendar attribute here?

  GridAxisSpacing spacing = 7;
  double resolution = 8;
  GridAxisDependenceType dependence_type = 9;
  repeated string depends_on = 10;    // depends on these axes, only for non-independent axes

  uint32 ncoords = 11; // number of coordinate values in axis
  double start_value = 12;
  repeated double values = 14;
  repeated double edges = 15;
}

message Projection {
  string name = 1;
  string geo_unit = 2;
  repeated Attribute attributes = 3;
}

message GridTimeCoordinateSystem {
  GridTimeType type = 1;
  string calendar_date_unit = 2;
  string time_axis_name = 3;
  string runtime_axis_name = 4;
  int32 id = 5;

  map<int32, GridAxis> regular = 6; // <minutes since 0Z, time offset axis>
  repeated GridAxis irregular = 7;  // list of time offset axes
}

message GridHorizCoordinateSystem {
  Projection projection = 1;
  string xaxis_name = 2;
  string yaxis_name = 3;
  bool is_curvilinear = 4;
  int32 id = 5;
}

message GridCoordinateSystem {
  string name = 1;
  repeated string axis_names = 2;
  uint32 horiz_coordinates_id = 3;
  uint32 time_coordinates_id = 4;
}

message Grid {
  string name = 1; // short name, unique within dataset
  string unit = 2;
  string description = 3;
  DataType array_type = 4;
  repeated Attribute attributes = 5;
  string coordinate_system_name = 6;
}

message GridDataset {
  string name = 1;
  string location = 2;
  CdmFeatureType feature_type = 3;
  repeated Attribute attributes = 4;
  repeated GridAxis grid_axes = 5;
  repeated GridHorizCoordinateSystem horiz_coord_systems = 6; // ordered
  repeated GridTimeCoordinateSystem time_coord_systems = 7; // ordered
  repeated GridCoordinateSystem coord_systems = 8; // ordered
  repeated Grid grids = 9;
}

/////////////////////////////////////////////////////////////////////////////
// GridData

message GridDataRequest {
  string location = 1;
  map<string, string> subset = 2;
}

message GridDataResponse {
  Error error = 1;    // non-empty on error
  uint32 version = 2; // response version

  string location = 3;
  map<string, string> subset = 4;
  GridReferencedArray data = 5;
}

message MaterializedCoordinateSystem {
  repeated GridAxis axes = 2;
  GridHorizCoordinateSystem horiz_coordinate_system = 3;
  GridTimeCoordinateSystem time_coordinate_system = 4;
}

message GridReferencedArray {
  string grid_name = 1;
  Data data = 2;
  MaterializedCoordinateSystem materialized_coordinate_system = 3;
}
